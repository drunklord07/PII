SET SERVEROUTPUT ON SIZE UNLIMITED;

DECLARE
    TYPE t_owner_list IS TABLE OF VARCHAR2(30);
    v_owner_list t_owner_list := t_owner_list(
        'SCHEMA1',
        'SCHEMA2',
        'SCHEMA3'
        -- Add more schema names here
    );

    v_sql         VARCHAR2(4000);
    v_output      VARCHAR2(4000);
    v_column_list VARCHAR2(4000);
    v_headers     VARCHAR2(4000);
    c_cursor      SYS_REFCURSOR;
    row_count     NUMBER;

BEGIN
    FOR i IN 1 .. v_owner_list.COUNT LOOP
        FOR rec IN (
            SELECT TABLE_NAME 
            FROM ALL_TABLES 
            WHERE OWNER = v_owner_list(i)
            ORDER BY TABLE_NAME
        ) LOOP
            v_column_list := '';
            v_headers := '';
            row_count := 0;

            -- Build column list
            FOR col_rec IN (
                SELECT COLUMN_NAME, DATA_TYPE
                FROM ALL_TAB_COLUMNS
                WHERE OWNER = v_owner_list(i) AND TABLE_NAME = rec.TABLE_NAME
                ORDER BY COLUMN_ID
            ) LOOP
                IF col_rec.DATA_TYPE IN (
                    'CHAR', 'NCHAR', 'VARCHAR2', 'NVARCHAR2',
                    'NUMBER', 'DATE', 'TIMESTAMP', 'FLOAT', 'CLOB'
                ) THEN
                    IF col_rec.DATA_TYPE = 'CLOB' THEN
                        v_column_list := v_column_list || 
                            'REPLACE(REPLACE(DBMS_LOB.SUBSTR(' || col_rec.COLUMN_NAME || ', 4000), ''"'', ''""''), CHR(10), '' '') || '','' || ';
                    ELSE
                        v_column_list := v_column_list || 
                            'REPLACE(REPLACE(TO_CHAR(' || col_rec.COLUMN_NAME || '), ''"'', ''""''), CHR(10), '' '') || '','' || ';
                    END IF;
                    v_headers := v_headers || '"' || col_rec.COLUMN_NAME || '",';
                END IF;
            END LOOP;

            IF v_column_list IS NULL THEN
                DBMS_OUTPUT.PUT_LINE('-- ' || v_owner_list(i) || '.' || rec.TABLE_NAME);
                DBMS_OUTPUT.PUT_LINE('[Skipped: no supported columns]');
                CONTINUE;
            END IF;

            -- Trim commas
            v_column_list := RTRIM(v_column_list, ' || '','' || ');
            v_headers := RTRIM(v_headers, ',');

            -- Build SQL to fetch 5 rows
            v_sql := 'SELECT ' || v_column_list ||
                     ' FROM "' || v_owner_list(i) || '"."' || rec.TABLE_NAME || '" WHERE ROWNUM <= 5';

            BEGIN
                OPEN c_cursor FOR v_sql;

                DBMS_OUTPUT.PUT_LINE('-- ' || v_owner_list(i) || '.' || rec.TABLE_NAME);
                DBMS_OUTPUT.PUT_LINE(v_headers);

                LOOP
                    FETCH c_cursor INTO v_output;
                    EXIT WHEN c_cursor%NOTFOUND;
                    row_count := row_count + 1;
                    DBMS_OUTPUT.PUT_LINE(v_output);
                END LOOP;

                IF row_count = 0 THEN
                    DBMS_OUTPUT.PUT_LINE('[No data]');
                END IF;

                DBMS_OUTPUT.PUT_LINE('');
                CLOSE c_cursor;

            EXCEPTION
                WHEN OTHERS THEN
                    DBMS_OUTPUT.PUT_LINE('[ERROR] ' || v_owner_list(i) || '.' || rec.TABLE_NAME || ': ' || SQLERRM);
                    DBMS_OUTPUT.PUT_LINE('');
            END;
        END LOOP;
    END LOOP;
END;
/
